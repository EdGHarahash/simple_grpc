# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import computer_pb2 as computer__pb2


class ComputerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SquareRoot = channel.unary_unary(
                '/Computer/SquareRoot',
                request_serializer=computer__pb2.Number.SerializeToString,
                response_deserializer=computer__pb2.Number.FromString,
                )
        self.Primes = channel.unary_stream(
                '/Computer/Primes',
                request_serializer=computer__pb2.Number.SerializeToString,
                response_deserializer=computer__pb2.Number.FromString,
                )
        self.STD = channel.stream_unary(
                '/Computer/STD',
                request_serializer=computer__pb2.Number.SerializeToString,
                response_deserializer=computer__pb2.Number.FromString,
                )
        self.MaxElem = channel.stream_stream(
                '/Computer/MaxElem',
                request_serializer=computer__pb2.Number.SerializeToString,
                response_deserializer=computer__pb2.Number.FromString,
                )


class ComputerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def SquareRoot(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Primes(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def STD(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MaxElem(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ComputerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SquareRoot': grpc.unary_unary_rpc_method_handler(
                    servicer.SquareRoot,
                    request_deserializer=computer__pb2.Number.FromString,
                    response_serializer=computer__pb2.Number.SerializeToString,
            ),
            'Primes': grpc.unary_stream_rpc_method_handler(
                    servicer.Primes,
                    request_deserializer=computer__pb2.Number.FromString,
                    response_serializer=computer__pb2.Number.SerializeToString,
            ),
            'STD': grpc.stream_unary_rpc_method_handler(
                    servicer.STD,
                    request_deserializer=computer__pb2.Number.FromString,
                    response_serializer=computer__pb2.Number.SerializeToString,
            ),
            'MaxElem': grpc.stream_stream_rpc_method_handler(
                    servicer.MaxElem,
                    request_deserializer=computer__pb2.Number.FromString,
                    response_serializer=computer__pb2.Number.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Computer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Computer(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def SquareRoot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Computer/SquareRoot',
            computer__pb2.Number.SerializeToString,
            computer__pb2.Number.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Primes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Computer/Primes',
            computer__pb2.Number.SerializeToString,
            computer__pb2.Number.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def STD(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/Computer/STD',
            computer__pb2.Number.SerializeToString,
            computer__pb2.Number.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MaxElem(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/Computer/MaxElem',
            computer__pb2.Number.SerializeToString,
            computer__pb2.Number.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
